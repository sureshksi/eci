spring.application.name=ORDER-SERVICE

spring.datasource.url=$(SPRING_DATASOURCE_URL)
spring.datasource.username=$(SPRING_DATASOURCE_USERNAME)
spring.datasource.password=$(SPRING_DATASOURCE_PASSWORD)
#spring.jpa.show-sql=true
logging.level.root=INFO

# application.properties
springdoc.swagger-ui.path=/orders/swagger-ui.html
springdoc.api-docs.path=/v3/orders/api-docs

# Enable/disable Swagger UI
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

# Point to the Gateway public base path
springdoc.api-docs.override-with-gateway-url=true

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s


#app.rest.url=http://localhost:8084
app.rest.url=http://api-gateway:8080

eureka.client.registerWithEureka = false
eureka.client.fetchRegistry = false
#eureka.instance.hostname=localhost
#eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka/

server.port=8083

management.endpoints.web.exposure.include=health,info,prometheus

# Kafka Properties
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.template.default-topic=notificationTopic
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=event:com.programmingtechie.orderservice.event.OrderPlacedEvent
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
